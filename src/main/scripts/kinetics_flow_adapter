#!/usr/bin/env python

""" kinetics_flow_adapter

Usage:
    kinetics_flow_adapter
            [--videos_per_chunk <videos_per_chunk>]
            [--num_workers <num_workers>]
            [--shm_dir_path <shm_dir_path>]
            [--frame_size <frame_size>]
            [--shuffle <shuffle>]
            [--image_extension <image_extension>]
            [--optical_flow_alg <optical_flow_alg>]
            <list_file>
            <output_folder>


Options:
    --shuffle=<shuffle>    [default: 0]
    --frame_size=<frame_size>    [default: -1]
    --shm_dir_path=<shm_dir_path>    [default: /dev/shm]
    --videos_per_chunk=<videos_per_chunk>    [default: 100]
    --num_workers=<num_workers>    [default: 4]
    --image_extension=<image_extension>  [default: .png]
    --optical_flow_alg=<optical_flow_alg>  [default: farn]
    """


from docopt import docopt
from gulpio.adapters import OpticalFlowAdapter
from gulpio.fileio import GulpIngestor

if __name__ == "__main__":
    arguments = docopt(__doc__)
    print(arguments)

    shm_dir_path = arguments['--shm_dir_path']
    frame_size = int(arguments['--frame_size'])
    shuffle = int(arguments['--shuffle'])
    list_file = arguments['<list_file>']
    output_folder = arguments['<output_folder>']
    videos_per_chunk = int(arguments['--videos_per_chunk'])
    num_workers = int(arguments['--num_workers'])
    image_ext = arguments['--image_extension']
    optical_flow_alg = arguments['--optical_flow_alg']
    adapter = OpticalFlowAdapter(
        list_file,
        shuffle,
        frame_size,
        image_ext,
        optical_flow_alg,
        shm_dir_path,
        )
ingestor = GulpIngestor(adapter,
                        output_folder,
                        videos_per_chunk,
                        num_workers)
ingestor()
